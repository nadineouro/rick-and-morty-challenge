{"version":3,"sources":["assets/background.svg","styles/shared/colors.ts","styles/global.ts","components/Logo/styles.ts","assets/logo.svg","components/Logo/index.tsx","styles/shared/animations.ts","components/Input/styles.ts","components/Input/index.tsx","components/Button/styles.ts","components/Button/index.tsx","styles/shared/breakpoints.ts","components/Loading/styles.ts","assets/loading.svg","components/Loading/index.tsx","components/Card/styles.ts","components/Card/index.tsx","components/CharacterList/styles.ts","components/CharacterList/index.tsx","components/Modal/styles.ts","components/Modal/index.tsx","components/CharacterViewModal/styles.ts","components/CharacterViewModal/ImageContent/styles.ts","assets/icons/close.svg","utils/useDevice.ts","components/CharacterViewModal/ImageContent/index.tsx","components/Title/styles.ts","components/Title/index.tsx","components/About/styles.ts","components/About/helpers.ts","components/About/index.tsx","assets/icons/people.svg","components/Residents/styles.ts","components/Residents/index.tsx","components/PlacementDescription/styles.ts","components/PlacementDescription/index.tsx","components/CharacterViewModal/MainContent/styles.ts","components/CharacterViewModal/MainContent/index.tsx","components/CharacterViewModal/index.tsx","assets/icons/previous.svg","assets/icons/next.svg","components/Pagination/styles.ts","components/Pagination/index.tsx","components/SearchContent/styles.ts","components/SearchContent/index.tsx","pages/Home/styles.ts","services/character/query.ts","pages/Home/hooks.tsx","pages/Home/index.tsx","App.tsx","index.tsx"],"names":["colors","black","white","neonGreen","darkGray","gray","lightGray","createGlobalStyle","background","Logo","styled","img","onClick","title","src","logo","alt","tabIndex","onKeyDown","e","keyCode","ellipsis","keyframes","swing","Input","input","props","Button","button","children","breakpoints","xs","sm","md","lg","smallScreen","mediumScreen","mobileAndTablet","Overlay","div","Container","Image","Text","Loading","show","loading","getActiveCardStyle","css","getBackgroundStyle","image","bw","Background","CardContent","size","active","simple","TextContent","MainText","strong","SubText","Card","id","mainText","subText","onFocus","CharacterList","characters","length","map","name","species","status","ModalContent","open","Modal","onClose","close","React","useCallback","useEffect","window","addEventListener","removeEventListener","document","body","style","overflow","stopPropagation","ModalGroup","ImageContent","BackgroundImage","Content","CardContainer","useDevice","useState","innerWidth","width","setWidth","handleWindowSizeChange","isMobile","isTablet","isMobileOrTablet","Title","getFormattedSpecies","type","toLowerCase","getFormattedGender","gender","getLastSeen","episode","air_date","getDescription","pronoun","Dead","verbToBe","statusPhrase","Alive","unknown","getBasedOnStatus","Male","Female","getBasedOnGender","formattedGender","formattedSpecies","lastSeen","getPhraseDetails","About","description","Residents","Icon","residents","people","Type","Name","Dimension","PlacementDescription","dimension","missingProps","some","prop","includes","MainContent","character","origin","location","CharacterViewModal","Pagination","currentPage","totalPages","onChange","pageCount","pageRangeDisplayed","marginPagesDisplayed","initialPage","onPageChange","selected","onPageActive","disableInitialCallback","previousLabel","previous","nextLabel","next","activeClassName","disabledClassName","breakLabel","SearchContent","handleClickCard","handleFocusCard","activeCharacter","modalOpen","handleClose","handlePageChange","InputGroup","form","GET_CHARACTERS","gql","useHome","client","useApolloClient","setModalOpen","setLoading","setCharacters","setActiveCharacter","inputSearch","setInputSearch","setCurrentPage","setTotalPages","currCharacter","find","searchCharacters","page","a","variables","filter","undefined","query","errorPolicy","data","results","info","pages","handleClickLogo","handleSubmitSearch","preventDefault","handleInputChange","target","value","Home","onSubmit","placeholder","App","className","ApolloClient","uri","cache","InMemoryCache","ReactDOM","render","StrictMode","ApolloProvider","getElementById"],"mappings":"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","file":"static/js/main.37e80b30.chunk.js","sourcesContent":["export default __webpack_public_path__ + \"static/media/background.4c7a7001.svg\";","const colors = {\n  black: \"#000\",\n  white: \"#fff\",\n  neonGreen: \"#cbd736\",\n  darkGray: \"#606060\",\n  gray: \"#8C8C8C\",\n  lightGray: \"#D3D3D3\",\n};\n\nexport default colors;\n","import { createGlobalStyle } from \"styled-components\";\nimport background from \"../assets/background.svg\";\nimport colors from \"./shared/colors\";\n\nexport default createGlobalStyle`\n  * {\n    margin: 0 auto;\n    box-sizing: border-box;\n  }\n  \n  body {\n    background-image: url(${background});\n    background-repeat: no-repeat;\n    background-position-x: center;\n    background-color: black;\n    color: ${colors.white};\n    font-family: \"Nunito\", sans-serif;\n    font-size: 16px;\n    font-weight: 400;\n    strong {\n      font-weight: 700;\n    }\n  }\n`;\n","import styled from \"styled-components\";\n\nexport const Logo = styled.img`\n  cursor: pointer;\n  width: 90%;\n  max-width: 500px;\n`;\n","export default __webpack_public_path__ + \"static/media/logo.d8bb791a.svg\";","import React from \"react\";\nimport * as S from \"./styles\";\nimport logo from \"../../assets/logo.svg\";\n\ntype Props = {\n  onClick?: () => void;\n  title?: string;\n};\n\nconst Logo: React.FC<Props> = ({ onClick, title }) => {\n  const handleKeyDown = (e: any) => {\n    if (!onClick) return;\n    if (e.keyCode === 13) onClick();\n  };\n\n  return (\n    <S.Logo\n      src={logo}\n      alt=\"Logo\"\n      onClick={onClick}\n      tabIndex={0}\n      onKeyDown={handleKeyDown}\n      title={title}\n    />\n  );\n};\n\nexport default Logo;\n","import { keyframes } from \"styled-components\";\n\nexport const ellipsis = keyframes`\n  0%,\n  100% {\n    width: 0px;\n  }\n  50% {\n    width: 25px;\n  }\n`;\n\nexport const swing = keyframes`\n  0%,\n  100% {\n    transform: rotate(0);\n  }\n  25% {\n    transform: rotate(1deg);\n  }\n  50% {\n    transform: rotate(-1deg);\n  }\n`;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { swing } from \"../../styles/shared/animations\";\n\nexport const Input = styled.input`\n  padding: 10px 20px;\n  border: 2px solid ${colors.white};\n  border-radius: 8px;\n  color: ${colors.white};\n  background: transparent;\n  &:hover {\n    animation: ${swing} 0.4s;\n    border-color: ${colors.neonGreen};\n  }\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\n\nconst Input: React.FC<React.InputHTMLAttributes<HTMLInputElement>> = ({\n  ...props\n}) => {\n  return <S.Input {...props} />;\n};\n\nexport default Input;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { swing } from \"../../styles/shared/animations\";\n\nexport const Button = styled.button`\n  padding: 10px 20px;\n  border: 2px solid ${colors.white};\n  border-radius: 8px;\n  color: ${colors.white};\n  background: transparent;\n  cursor: pointer;\n  &:hover {\n    animation: ${swing} 0.4s;\n    border-color: ${colors.neonGreen};\n    color: ${colors.neonGreen};\n  }\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\n\nconst Button: React.FC<React.ButtonHTMLAttributes<HTMLButtonElement>> = ({\n  children,\n  ...props\n}) => {\n  return <S.Button {...props}>{children}</S.Button>;\n};\n\nexport default Button;\n","export const breakpoints = {\n  xs: 320,\n  sm: 426,\n  md: 769,\n  lg: 1200,\n};\n\nexport default breakpoints;\n\nexport const smallScreen = () => `@media (max-width: ${breakpoints.sm}px)`;\nexport const mediumScreen = () =>\n  `@media screen and (min-width: ${breakpoints.sm}px) and (max-width: ${breakpoints.md}px)`;\nexport const largeScreen = () => `@media (min-width: ${breakpoints.md}px)`;\n\nexport const mobileAndTablet = () => `@media (max-width: ${breakpoints.md}px)`;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { mobileAndTablet } from \"../../styles/shared/breakpoints\";\nimport { ellipsis } from \"../../styles/shared/animations\";\n\nexport const Overlay = styled.div`\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  backdrop-filter: blur(25px);\n`;\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  height: 100%;\n`;\n\nexport const Image = styled.img`\n  border-radius: 8px;\n  margin-bottom: 30px;\n  border: 2px solid ${colors.darkGray};\n`;\n\nexport const Text = styled.div`\n  font-size: 28px;\n  color: ${colors.white};\n  ${mobileAndTablet} {\n    font-size: 18px;\n  }\n  :after {\n    display: inline-block;\n    vertical-align: bottom;\n    overflow: hidden;\n    animation: ${ellipsis} 3s infinite;\n    content: \"...\";\n    color: ${colors.white};\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/loading.fd752ea1.svg\";","import React from \"react\";\nimport * as S from \"./styles\";\nimport loading from \"../../assets/loading.svg\";\n\ntype Props = {\n  show?: boolean;\n};\n\nconst Loading: React.FC<Props> = ({ show = true }) => {\n  if (!show) return null;\n  return (\n    <S.Overlay data-testid=\"loadingOverlay\">\n      <S.Container data-testid=\"loading\">\n        <S.Image src={loading} alt=\"loading\" />\n        <S.Text>Loading</S.Text>\n      </S.Container>\n    </S.Overlay>\n  );\n};\n\nexport default Loading;\n","import styled, { css } from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { swing } from \"../../styles/shared/animations\";\nimport {\n  mobileAndTablet,\n  smallScreen,\n  mediumScreen,\n} from \"../../styles/shared/breakpoints\";\n\ntype CardProps = {\n  image: string;\n  active: boolean;\n  simple: boolean;\n  size: \"small\" | \"large\";\n  bw: boolean;\n};\n\nconst getActiveCardStyle = () => css`\n  border-color: ${colors.neonGreen};\n  box-shadow: 0 0 10px ${colors.neonGreen};\n  animation: ${swing} 0.4s;\n`;\n\nconst getBackgroundStyle = (image: string, bw: boolean) => css`\n  background-image: url(${image});\n  background-position: center;\n  background-size: cover;\n  ${bw &&\n  css`\n    filter: grayscale();\n  `};\n`;\n\nexport const Background = styled.div`\n  width: 100%;\n`;\n\nexport const CardContent = styled.div`\n  width: 100%;\n`;\n\nexport const Container = styled.div<CardProps>`\n  ${(props) => css`\n    outline: none;\n    height: ${props.size === \"small\" ? \"224px\" : \"80%\"};\n    width: ${props.size === \"small\" ? \"224px\" : \"100%\"};\n    overflow: hidden;\n    border: 2px solid ${colors.darkGray};\n    border-radius: 8px;\n    ${props.active && getActiveCardStyle()}\n    ${!props.simple &&\n    css`\n      &:hover,\n      &:active {\n        ${getActiveCardStyle()}\n        cursor: pointer;\n      }\n    `}\n    ${Background} {\n      height: ${props.simple ? \"90%\" : \"75%\"};\n      ${getBackgroundStyle(props.image, props.bw)}\n    }\n    ${CardContent} {\n      height: ${props.simple ? \"10%\" : \"25%\"};\n      ${!props.simple && getBackgroundStyle(props.image, props.bw)};\n    }\n\n    ${mobileAndTablet} {\n      width: ${props.size === \"large\" && \"70%\"};\n      ${Background} {\n        height: 70%;\n      }\n      ${CardContent} {\n        height: 30%;\n        ${getBackgroundStyle(props.image, props.bw)}\n      }\n    }\n    ${smallScreen} {\n      height: ${props.size === \"large\" && \"190px\"};\n    }\n    ${mediumScreen} {\n      height: ${props.size === \"large\" && \"230px\"};\n    }\n  `};\n`;\n\nexport const TextContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  padding: 0 15px;\n  height: 100%;\n  backdrop-filter: blur(6px) brightness(25%);\n  ${mobileAndTablet} {\n    backdrop-filter: blur(10px) brightness(25%);\n  }\n`;\n\nexport const MainText = styled.strong`\n  display: inline-block;\n  white-space: nowrap;\n  overflow: hidden;\n  text-overflow: ellipsis;\n  width: 100%;\n  font-size: 20px;\n  font-weight: 700;\n  line-height: 25px;\n  color: ${colors.white};\n`;\n\nexport const SubText = styled.div`\n  width: 100%;\n  font-size: 12px;\n  line-height: 15px;\n  color: ${colors.white};\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\n\ntype Props = {\n  image: string;\n  mainText: string;\n  subText: string;\n  simple?: boolean;\n  size?: \"small\" | \"large\";\n  active?: boolean;\n  bw?: boolean;\n  id?: number;\n  onClick?: (id?: number) => void;\n  onFocus?: (id?: number) => void;\n};\n\nconst Card: React.FC<Props> = ({\n  id,\n  image,\n  mainText,\n  subText,\n  simple = false,\n  size = \"small\",\n  active = false,\n  bw = false,\n  onClick,\n  onFocus,\n}) => {\n  const handleClick = () => onClick && onClick(id);\n\n  const handleFocus = () => onFocus && onFocus(id);\n\n  const handleKeyDown = (e: any) => {\n    if (!onClick) return;\n    if (e.keyCode === 13) onClick(id);\n  };\n\n  return (\n    <S.Container\n      image={image}\n      active={active}\n      simple={simple}\n      size={size}\n      bw={bw}\n      onClick={handleClick}\n      onKeyDown={handleKeyDown}\n      onFocus={handleFocus}\n      tabIndex={0}\n      data-testid=\"card\"\n    >\n      <S.Background data-testid=\"mainBackground\" />\n      <S.CardContent data-testid=\"cardContent\">\n        <S.TextContent>\n          <S.MainText data-testid=\"mainText\">{mainText}</S.MainText>\n          <S.SubText data-testid=\"subText\">{subText}</S.SubText>\n        </S.TextContent>\n      </S.CardContent>\n    </S.Container>\n  );\n};\n\nexport default Card;\n","import styled from \"styled-components\";\nimport { mobileAndTablet } from \"../../styles/shared/breakpoints\";\nimport { Container as Card } from \"../Card/styles\";\n\nexport const Container = styled.div`\n  list-style: none;\n  display: flex;\n  flex-direction: row;\n  justify-content: center;\n  align-items: center;\n  flex-wrap: wrap;\n  max-width: 80%;\n  margin: 70px 0;\n  ${Card} {\n    margin: 12px;\n  }\n  ${mobileAndTablet} {\n    margin: 40px 0;\n  }\n`;\n","import React from \"react\";\nimport { Character } from \"../../services/character/types\";\nimport Card from \"../Card\";\n\nimport * as S from \"./styles\";\n\ntype Props = {\n  characters: Character[];\n  active?: number;\n  onClick: (id?: number) => void;\n  onFocus: (id?: number) => void;\n};\n\nconst CharacterList: React.FC<Props> = ({\n  characters,\n  onClick,\n  active,\n  onFocus,\n}) => {\n  if (!characters || !characters.length) return null;\n  return (\n    <S.Container data-testid=\"characterList\" aria-label=\"List of Characters\">\n      {characters.map(({ id, image, name, species, status }) => (\n        <Card\n          key={id}\n          id={id}\n          image={image}\n          mainText={name}\n          subText={species}\n          active={active === id}\n          bw={status === \"Dead\"}\n          onClick={onClick}\n          onFocus={onFocus}\n          data-testid=\"card\"\n        />\n      ))}\n    </S.Container>\n  );\n};\n\nexport default CharacterList;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { mobileAndTablet } from \"../../styles/shared/breakpoints\";\n\ntype ModalProps = {\n  open: boolean;\n};\n\nexport const ModalContent = styled.div`\n  position: fixed;\n  top: 50%;\n  left: 50%;\n  transform: translate(-50%, -50%);\n  width: 70%;\n  height: 90%;\n  background-color: ${colors.white};\n  border-radius: 16px;\n  ${mobileAndTablet} {\n    width: 90%;\n    height: auto;\n    max-height: 80%;\n  }\n`;\n\nexport const Overlay = styled.div<ModalProps>`\n  display: ${(props) => (props.open ? \"block\" : \"none\")};\n  position: fixed;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  background: rgba(0, 0, 0, 0.5);\n  width: 100%;\n  height: 100%;\n  ${ModalContent} {\n    display: ${(props) => (props.open ? \"block\" : \"none\")};\n  } ;\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\n\ntype Props = {\n  open: boolean;\n  onClose?: () => void;\n};\n\nconst Modal: React.FC<Props> = ({ open, onClose = () => {}, children }) => {\n  const close = React.useCallback(\n    (e: any) => {\n      if (!open) return;\n      if (e.keyCode === 27) onClose();\n    },\n    [onClose, open]\n  );\n\n  React.useEffect(() => {\n    window.addEventListener(\"keydown\", close);\n    return () => window.removeEventListener(\"keydown\", close);\n  }, [close]);\n\n  React.useEffect(() => {\n    document.body.style.overflow = open ? \"hidden\" : \"unset\";\n  }, [open]);\n\n  return (\n    <S.Overlay open={open} onClick={onClose} data-testid=\"modalOverlay\">\n      <S.ModalContent onClick={(e) => e.stopPropagation()} data-testid=\"modal\">\n        {children}\n      </S.ModalContent>\n    </S.Overlay>\n  );\n};\n\nexport default Modal;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { smallScreen } from \"../../styles/shared/breakpoints\";\nimport { mobileAndTablet, mediumScreen } from \"../../styles/shared/breakpoints\";\n\nimport { ModalContent as Modal } from \"../Modal/styles\";\n\nexport const Container = styled.div`\n  ${smallScreen} {\n    ${Modal} {\n      margin: 15% auto;\n      max-height: 75%;\n    }\n  }\n  ${mediumScreen} {\n    ${Modal} {\n      margin: 10% auto;\n      max-height: 60%;\n    }\n  }\n`;\n\nexport const ModalGroup = styled.div`\n  display: flex;\n  flex-direction: row;\n  justify-content: flex-start;\n  background-color: ${colors.black};\n  width: 100%;\n  height: 100%;\n  border-radius: 16px;\n\n  ${mobileAndTablet} {\n    flex-direction: column;\n  }\n  ${smallScreen} {\n    max-height: 70vh;\n  }\n  ${mediumScreen} {\n    max-height: 60vh;\n  }\n`;\n","import styled from \"styled-components\";\nimport {\n  mobileAndTablet,\n  mediumScreen,\n} from \"../../../styles/shared/breakpoints\";\nimport { Button } from \"../../Button/styles\";\nimport { Container as CardContainer } from \"../../Card/styles\";\n\ntype BackgroundPropsImage = {\n  image: string;\n};\n\nexport const ImageContent = styled.div`\n  overflow: hidden;\n  width: 32%;\n  height: 100%;\n  border-radius: 16px 0 0 16px;\n\n  ${mobileAndTablet} {\n    width: 100%;\n    min-height: 70px;\n    border-radius: 16px 16px 0 0;\n  }\n`;\n\nexport const BackgroundImage = styled.div<BackgroundPropsImage>`\n  background-image: url(${(props) => props.image});\n  background-size: cover;\n  background-position: center;\n  height: 100%;\n  opacity: 0.3;\n  filter: blur(25px);\n  ${mobileAndTablet} {\n    height: 70px;\n  }\n`;\n\nexport const Content = styled.div`\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 32%;\n  height: 100%;\n  margin: 20px;\n  ${Button} {\n    margin-bottom: 20px;\n  }\n  ${CardContainer} {\n    margin-left: -20%;\n  }\n\n  ${mobileAndTablet} {\n    margin: 0;\n    width: 100%;\n    height: auto;\n    top: -80px;\n    display: flex;\n    justify-content: center;\n    align-items: center;\n    flex-direction: column;\n    ${Button} {\n      position: absolute;\n      bottom: 80%;\n      left: -5%;\n      border: none;\n    }\n    ${CardContainer} {\n      margin: 0;\n    }\n  }\n  ${mediumScreen} {\n    top: -130px;\n  }\n`;\n","export default __webpack_public_path__ + \"static/media/close.bac9f750.svg\";","import React from \"react\";\nimport { breakpoints } from \"../styles/shared/breakpoints\";\n\nconst useDevice = () => {\n  const [width, setWidth] = React.useState<number>(window.innerWidth);\n  function handleWindowSizeChange() {\n    setWidth(window.innerWidth);\n  }\n  React.useEffect(() => {\n    window.addEventListener(\"resize\", handleWindowSizeChange);\n    return () => {\n      window.removeEventListener(\"resize\", handleWindowSizeChange);\n    };\n  }, []);\n\n  const isMobile = width <= breakpoints.sm;\n  const isTablet = width > breakpoints.sm && width <= breakpoints.md;\n  const isMobileOrTablet = width <= breakpoints.md;\n\n  return { isMobile, isTablet, isMobileOrTablet };\n};\n\nexport default useDevice;\n","import React from \"react\";\nimport * as S from \"./styles\";\nimport Button from \"../../Button\";\nimport Card from \"../../Card\";\nimport close from \"../../../assets/icons/close.svg\";\nimport useDevice from \"../../../utils/useDevice\";\n\ntype Props = {\n  image: string;\n  onClose?: () => void;\n  mainText: string;\n  subText: string;\n};\n\nconst ImageContent: React.FC<Props> = ({\n  image,\n  mainText,\n  subText,\n  onClose,\n}) => {\n  const { isMobileOrTablet } = useDevice();\n  return (\n    <S.ImageContent data-testid=\"imageContent\">\n      <S.BackgroundImage data-testid=\"backgroundImage\" image={image} />\n      <S.Content>\n        <Button onClick={onClose}>\n          {isMobileOrTablet ? <img src={close} alt=\"close\" /> : \"Close\"}\n        </Button>\n        <Card\n          image={image}\n          mainText={mainText}\n          subText={subText}\n          size=\"large\"\n          simple\n        />\n      </S.Content>\n    </S.ImageContent>\n  );\n};\n\nexport default ImageContent;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\n\nexport const Title = styled.div`\n  font-size: 13px;\n  color: ${colors.neonGreen};\n  letter-spacing: 10px;\n  text-transform: uppercase;\n`;\n","import React from \"react\";\nimport * as S from \"./styles\";\n\nconst Title: React.FC = ({ children }) => (\n  <S.Title data-testid=\"title\">{children}</S.Title>\n);\n\nexport default Title;\n","import styled from \"styled-components\";\nimport { Title } from \"../Title/styles\";\nimport colors from \"../../styles/shared/colors\";\n\nexport const Container = styled.div`\n  color: ${colors.lightGray};\n  line-height: 20px;\n  ${Title} {\n    margin-bottom: 10px;\n  }\n`;\n","import { Props } from \".\";\n\nimport { Episode } from \"../../services/character/types\";\n\ntype Option = {\n  [key: string]: any;\n};\n\nexport const getBasedOnGender = (gender: string) => {\n  const basedOnGender: Option = {\n    Male: { pronoun: \"He\" },\n    Female: { pronoun: \"She\" },\n    unknown: { pronoun: \"It\" },\n  };\n  return basedOnGender[gender];\n};\n\nexport const getBasedOnStatus = (status: string, pronoun: string) => {\n  const basedOnStatus: Option = {\n    Dead: {\n      verbToBe: \"was\",\n      statusPhrase: `${pronoun} is dead`,\n    },\n    Alive: {\n      verbToBe: \"is\",\n      statusPhrase: `${pronoun} is alive and well`,\n    },\n    unknown: {\n      verbToBe: \"is\",\n      statusPhrase: `It can't be told if ${pronoun.toLowerCase()} is alive or dead`,\n    },\n  };\n  return basedOnStatus[status];\n};\n\nexport const getFormattedSpecies = (species: string, type: string) => {\n  if (!type) return species.toLowerCase();\n  return `${species.toLowerCase()} (${type})`;\n};\n\nexport const getFormattedGender = (gender: string) => {\n  if (!gender || gender === \"unknown\") return \"\";\n  return gender.toLowerCase();\n};\n\nexport const getLastSeen = (episode: Episode[]) => {\n  if (!episode?.length) return \"\";\n  return `Last seen in ${episode[episode.length - 1].air_date}.`;\n};\n\nexport const getPhraseDetails = ({\n  status,\n  gender,\n  species,\n  episode,\n  type,\n}: Props) => {\n  const { pronoun } = getBasedOnGender(gender);\n  const { verbToBe, statusPhrase } = getBasedOnStatus(status, pronoun);\n\n  return {\n    verbToBe,\n    statusPhrase,\n    formattedGender: getFormattedGender(gender),\n    formattedSpecies: getFormattedSpecies(species, type),\n    lastSeen: getLastSeen(episode),\n  };\n};\n\nexport const getDescription = (props: Props) => {\n  const {\n    verbToBe,\n    statusPhrase,\n    formattedGender,\n    formattedSpecies,\n    lastSeen,\n  } = getPhraseDetails(props);\n\n  return `${props.name} ${verbToBe} a ${formattedGender} ${formattedSpecies}. ${statusPhrase}. ${lastSeen}`;\n};\n","import React from \"react\";\nimport Title from \"../Title\";\n\nimport * as S from \"./styles\";\nimport { getDescription } from \"./helpers\";\nimport { Character } from \"../../services/character/types\";\n\nexport type Props = Pick<\n  Character,\n  \"name\" | \"status\" | \"gender\" | \"species\" | \"episode\" | \"type\"\n>;\n\nconst About: React.FC<Props> = (props) => {\n  const description = getDescription(props);\n  return (\n    <S.Container data-testid=\"about\">\n      <Title>About</Title>\n      {description}\n    </S.Container>\n  );\n};\n\nexport default About;\n","export default __webpack_public_path__ + \"static/media/people.8af5d025.svg\";","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\n\nexport const Residents = styled.div`\n  font-size: 14px;\n  color: ${colors.gray};\n`;\n\nexport const Icon = styled.img`\n  margin-right: 10px;\n`;\n","import React from \"react\";\nimport people from \"../../assets/icons/people.svg\";\nimport { Resident } from \"../../services/character/types\";\nimport * as S from \"./styles\";\n\ntype Props = {\n  residents?: Resident[];\n};\n\nconst Residents: React.FC<Props> = ({ residents }) => {\n  if (!residents?.length) return null;\n  return (\n    <S.Residents data-testid=\"residents\">\n      <S.Icon src={people} />\n      {residents.length} residents\n    </S.Residents>\n  );\n};\n\nexport default Residents;\n","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\nimport { mobileAndTablet } from \"../../styles/shared/breakpoints\";\nimport { Title } from \"../Title/styles\";\n\nexport const Container = styled.div`\n  ${Title} {\n    margin-bottom: 20px;\n  }\n`;\n\nexport const Type = styled.div`\n  font-size: 14px;\n  color: ${colors.gray};\n  ${mobileAndTablet} {\n    font-size: 12px;\n  }\n`;\n\nexport const Name = styled.div`\n  font-size: 28px;\n  ${mobileAndTablet} {\n    font-size: 20px;\n  }\n`;\n\nexport const Dimension = styled.div`\n  font-size: 18px;\n  color: ${colors.lightGray};\n  margin-bottom: 15px;\n  ${mobileAndTablet} {\n    font-size: 16px;\n  }\n`;\n","import React from \"react\";\nimport Title from \"../Title\";\nimport Residents from \"../Residents\";\n\nimport { Resident } from \"../../services/character/types\";\nimport useDevice from \"../../utils/useDevice\";\n\nimport * as S from \"./styles\";\n\ntype Props = {\n  title: string;\n  type?: string;\n  name?: string;\n  dimension?: string;\n  residents?: Resident[];\n};\n\nconst PlacementDescription: React.FC<Props> = ({\n  title,\n  type = \"Unknown Planet\",\n  name = \"Unknown\",\n  dimension = \"Unknown\",\n  residents,\n}) => {\n  const { isMobileOrTablet } = useDevice();\n\n  const missingProps = [type, name, dimension].some((prop) =>\n    prop?.includes(\"Unknown\")\n  );\n  if (isMobileOrTablet && missingProps) return null;\n\n  return (\n    <S.Container data-testid={`placementDescription${title}`}>\n      <Title>{title}</Title>\n      <S.Type data-testid='locationType'>{type}</S.Type>\n      <S.Name data-testid='locationName'>{name}</S.Name>\n      <S.Dimension data-testid='locationDimension'>{dimension}</S.Dimension>\n      <Residents residents={residents} />\n    </S.Container>\n  );\n};\n\nexport default PlacementDescription;\n","import styled from \"styled-components\";\nimport {\n  mobileAndTablet,\n  smallScreen,\n  mediumScreen,\n} from \"../../../styles/shared/breakpoints\";\nimport { Container as PlacementDescription } from \"../../PlacementDescription/styles\";\n\nexport const MainContent = styled.div`\n  flex: 1;\n  padding: 5%;\n  overflow: auto;\n  ${PlacementDescription} {\n    margin-top: 5%;\n  }\n\n  ${mobileAndTablet} {\n    padding: 20px;\n  }\n  ${smallScreen} {\n    margin: 10% 0;\n    ${PlacementDescription} {\n      margin-top: 10%;\n    }\n  }\n  ${mediumScreen} {\n    margin: 5% 0;\n  }\n`;\n","import React from \"react\";\nimport About from \"../../About\";\nimport PlacementDescription from \"../../PlacementDescription\";\nimport { Character } from \"../../../services/character/types\";\n\nimport * as S from \"./styles\";\n\ntype Props = {\n  character: Character;\n};\n\nconst MainContent: React.FC<Props> = ({\n  character: { name, gender, species, type, status, episode, origin, location },\n}) => {\n  return (\n    <S.MainContent data-testid=\"mainContent\">\n      <About\n        name={name}\n        gender={gender}\n        species={species}\n        type={type}\n        status={status}\n        episode={episode}\n      />\n      <PlacementDescription\n        title=\"Origin\"\n        type={origin?.type}\n        name={origin?.name}\n        dimension={origin?.dimension}\n        residents={origin?.residents}\n      />\n      <PlacementDescription\n        title=\"Location\"\n        type={location?.type}\n        name={location?.name}\n        dimension={location?.dimension}\n        residents={location?.residents}\n      />\n    </S.MainContent>\n  );\n};\n\nexport default MainContent;\n","import React from \"react\";\nimport Modal from \"../Modal\";\nimport * as S from \"./styles\";\nimport { Character } from \"../../services/character/types\";\n\nimport ImageContent from \"./ImageContent\";\nimport MainContent from \"./MainContent\";\n\ntype Props = {\n  open: boolean;\n  onClose?: () => void;\n  character?: Character;\n};\n\nconst CharacterViewModal: React.FC<Props> = ({ open, onClose, character }) => {\n  return (\n    <S.Container data-testid=\"characterViewModal\">\n      <Modal open={open} onClose={onClose}>\n        {character && (\n          <S.ModalGroup data-testid=\"modalGroup\">\n            <ImageContent\n              image={character.image}\n              mainText={character.name}\n              subText={character.species}\n              onClose={onClose}\n            />\n            <MainContent character={character} />\n          </S.ModalGroup>\n        )}\n      </Modal>\n    </S.Container>\n  );\n};\n\nexport default CharacterViewModal;\n","export default __webpack_public_path__ + \"static/media/previous.867e9dfd.svg\";","export default __webpack_public_path__ + \"static/media/next.d1c38e35.svg\";","import styled from \"styled-components\";\nimport colors from \"../../styles/shared/colors\";\n\nexport const Pagination = styled.div`\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  margin: 20px 0 100px;\n  ul {\n    list-style-type: none;\n    margin: 0;\n    padding: 0;\n    display: flex;\n    flex-direction: row;\n    justify-content: center;\n    align-items: center;\n    li {\n      font-size: 20px;\n      color: ${colors.lightGray};\n      cursor: pointer;\n      margin-right: 32px;\n      margin-bottom: 5px;\n      &:last-child {\n        margin-right: 0;\n      }\n      &.disabled {\n        img {\n          filter: invert(77%) sepia(84%) saturate(11%) hue-rotate(64deg)\n            brightness(92%) contrast(98%);\n        }\n        cursor: default;\n      }\n      &.active {\n        color: ${colors.neonGreen};\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport ReactPaginate from \"react-paginate\";\n\nimport previous from \"../../assets/icons/previous.svg\";\nimport next from \"../../assets/icons/next.svg\";\n\nimport * as S from \"./styles\";\n\ntype Props = {\n  currentPage: number;\n  totalPages: number;\n  onChange: (selected: number) => void;\n};\n\nconst Pagination: React.FC<Props> = ({ currentPage, totalPages, onChange }) => {\n  return (\n    <S.Pagination data-testid=\"pagination\">\n      <ReactPaginate\n        pageCount={totalPages}\n        pageRangeDisplayed={4}\n        marginPagesDisplayed={0}\n        initialPage={currentPage - 1}\n        onPageChange={({ selected }) => onChange(selected)}\n        onPageActive={() => {}}\n        disableInitialCallback\n        previousLabel={<img src={previous} alt=\"página anterior\" />}\n        nextLabel={<img src={next} alt=\"próxima página\" />}\n        activeClassName=\"active\"\n        disabledClassName=\"disabled\"\n        breakLabel=\"\"\n        data-testid=\"test\"\n      />\n    </S.Pagination>\n  );\n};\n\nexport default Pagination;\n","import styled from \"styled-components\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n`;\n","import React from \"react\";\nimport { Character } from \"../../services/character/types\";\n\nimport CharacterList from \"../CharacterList\";\nimport CharacterViewModal from \"../CharacterViewModal\";\nimport Pagination from \"../Pagination\";\n\nimport * as S from \"./styles\";\n\ntype Props = {\n  characters: Character[];\n  handleClickCard: (id?: number) => void;\n  handleFocusCard: (id?: number) => void;\n  activeCharacter?: Character;\n  modalOpen: boolean;\n  handleClose: () => void;\n  handlePageChange: (selected: number) => void;\n  currentPage: number;\n  totalPages: number;\n};\n\nconst SearchContent: React.FC<Props> = ({\n  characters,\n  handleClickCard,\n  handleFocusCard,\n  activeCharacter,\n  modalOpen,\n  handleClose,\n  handlePageChange,\n  currentPage,\n  totalPages,\n}) => {\n  return (\n    <S.Container data-testid=\"searchContent\">\n      <CharacterList\n        characters={characters}\n        onClick={handleClickCard}\n        onFocus={handleFocusCard}\n        active={activeCharacter?.id}\n      />\n      <Pagination\n        currentPage={currentPage}\n        totalPages={totalPages}\n        onChange={handlePageChange}\n      />\n      <CharacterViewModal\n        open={modalOpen}\n        onClose={handleClose}\n        character={activeCharacter}\n      />\n    </S.Container>\n  );\n};\n\nexport default SearchContent;\n","import styled from \"styled-components\";\nimport { Input } from \"../../components/Input/styles\";\nimport { Logo } from \"../../components/Logo/styles\";\n\nimport { mobileAndTablet } from \"../../styles/shared/breakpoints\";\n\nexport const Container = styled.div`\n  display: flex;\n  flex-direction: column;\n  justify-content: center;\n  align-items: center;\n  ${Logo} {\n    margin: 30px 0 50px;\n  }\n`;\n\nexport const InputGroup = styled.form`\n  display: flex;\n  flex-direction: row;\n  max-width: 80%;\n  justify-content: center;\n  ${Input} {\n    margin-right: 16px;\n    ${mobileAndTablet} {\n      margin-right: 8px;\n      max-width: 65%;\n    }\n  }\n`;\n","import gql from \"graphql-tag\";\n\nexport const GET_CHARACTERS = gql`\n  query getCharacteres($page: Int, $filter: FilterCharacter) {\n    characters(page: $page, filter: $filter) {\n      info {\n        count\n        pages\n        next\n        prev\n      }\n      results {\n        id\n        name\n        status\n        species\n        type\n        gender\n        origin {\n          id\n          name\n          type\n          dimension\n          residents {\n            id\n          }\n        }\n        location {\n          id\n          name\n          type\n          dimension\n          residents {\n            id\n          }\n        }\n        image\n        episode {\n          air_date\n        }\n      }\n    }\n  }\n`;\n","import React from \"react\";\nimport { useApolloClient } from \"@apollo/client\";\nimport { GET_CHARACTERS } from \"../../services/character/query\";\nimport { Character, CharactersArgs } from \"../../services/character/types\";\nconst useHome = () => {\n  const client = useApolloClient();\n\n  const [modalOpen, setModalOpen] = React.useState<boolean>(false);\n  const [loading, setLoading] = React.useState<boolean>(false);\n  const [characters, setCharacters] = React.useState<Character[]>();\n  const [activeCharacter, setActiveCharacter] = React.useState<Character>();\n  const [inputSearch, setInputSearch] = React.useState<string>(\"\");\n  const [currentPage, setCurrentPage] = React.useState<number>();\n  const [totalPages, setTotalPages] = React.useState<number>(1);\n\n  const handleInputChange = (e: React.ChangeEvent<HTMLInputElement>) =>\n    setInputSearch(e.target.value);\n\n  const handleClose = () => {\n    setActiveCharacter(undefined);\n    setModalOpen(false);\n  };\n\n  const handleFocusCard = (id?: number) => {\n    if (modalOpen) return;\n    const currCharacter = characters?.find(\n      (character: Character) => character.id === id\n    );\n    setActiveCharacter(currCharacter);\n  };\n\n  const handleClickCard = (id?: number) => {\n    handleFocusCard(id);\n    setModalOpen(true);\n  };\n\n  const searchCharacters = async (page: number) => {\n    const variables: CharactersArgs = { page, filter: { name: inputSearch } };\n\n    setCharacters(undefined);\n    setLoading(true);\n\n    const { data: { characters } = {} } = await client.query({\n      query: GET_CHARACTERS,\n      variables,\n      errorPolicy: \"ignore\",\n    });\n\n    const { results, info: { pages = 0 } = {} } = characters || {};\n    if (pages !== totalPages) setTotalPages(pages);\n    if (results) setCurrentPage(page);\n    setCharacters(results);\n    setLoading(false);\n  };\n\n  const handleSubmitSearch = async (e: React.FormEvent<HTMLFormElement>) => {\n    e.preventDefault();\n    await searchCharacters(1);\n  };\n\n  const handlePageChange = (selected: number) => searchCharacters(selected + 1);\n\n  const handleClickLogo = () => {\n    setCharacters(undefined);\n    setCurrentPage(undefined);\n    setInputSearch(\"\");\n  };\n\n  return {\n    loading,\n    handleClickLogo,\n    handleSubmitSearch,\n    inputSearch,\n    handleInputChange,\n    characters,\n    currentPage,\n    handleClickCard,\n    handleFocusCard,\n    activeCharacter,\n    modalOpen,\n    handleClose,\n    handlePageChange,\n    totalPages,\n  };\n};\n\nexport default useHome;\n","import React from \"react\";\n\nimport Logo from \"../../components/Logo\";\nimport Input from \"../../components/Input\";\nimport Button from \"../../components/Button\";\nimport Loading from \"../../components/Loading\";\nimport SearchContent from \"../../components/SearchContent\";\n\nimport * as S from \"./styles\";\nimport useHome from \"./hooks\";\n\nconst Home: React.FC = () => {\n  const {\n    loading,\n    handleClickLogo,\n    handleSubmitSearch,\n    inputSearch,\n    handleInputChange,\n    characters,\n    currentPage,\n    handleClickCard,\n    handleFocusCard,\n    activeCharacter,\n    modalOpen,\n    handleClose,\n    handlePageChange,\n    totalPages,\n  } = useHome();\n  return (\n    <S.Container>\n      <Loading show={loading} />\n      <Logo onClick={handleClickLogo} title=\"Click here to clear search\" />\n      <S.InputGroup onSubmit={handleSubmitSearch}>\n        <Input\n          value={inputSearch}\n          onChange={handleInputChange}\n          placeholder=\"Search characteres\"\n          title=\"Type search term here\"\n        />\n        <Button type=\"submit\" title=\"Click here to search characters\">\n          Search\n        </Button>\n      </S.InputGroup>\n      {characters && currentPage && (\n        <SearchContent\n          characters={characters}\n          handleClickCard={handleClickCard}\n          handleFocusCard={handleFocusCard}\n          activeCharacter={activeCharacter}\n          modalOpen={modalOpen}\n          handleClose={handleClose}\n          handlePageChange={handlePageChange}\n          currentPage={currentPage}\n          totalPages={totalPages}\n        />\n      )}\n    </S.Container>\n  );\n};\n\nexport default Home;\n","import React from \"react\";\nimport GlobalStyle from \"./styles/global\";\nimport Home from \"./pages/Home\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <GlobalStyle />\n      <Home />\n    </div>\n  );\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport App from \"./App\";\nimport { ApolloClient, InMemoryCache, ApolloProvider } from \"@apollo/client\";\n\nconst client = new ApolloClient({\n  uri: \"https://rickandmortyapi.com/graphql\",\n  cache: new InMemoryCache(),\n});\n\nReactDOM.render(\n  <React.StrictMode>\n    <ApolloProvider client={client}>\n      <App />\n    </ApolloProvider>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n"],"sourceRoot":""}